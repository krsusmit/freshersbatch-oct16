1. Downloaded
2. Unzipped
3. Logged in to atlas
4. mongoimport --host <cluster shard id> --db <database name> --collection <collection name> --type json --file <path> --jsonArray --authenticationDatabase admin --ssl --username <username> --password <password>
5. mongo "<link>" --username <username>
6. show dbs
7. use restaurants
8. db.addresses.find()
9. started

Assignment 3

1. db.addresses.find()
2. db.addresses.find({},{restaurant_id:1,name:1,borough:1,cuisine:1})
3. db.addresses.find({},{restaurant_id:1,name:1,borough:1,cuisine:1,_id:0})
4. db.addresses.find({},{restaurant_id:1,name:1,borough:1,'address.zipcode':1,_id:0})
5. db.addresses.find({borough:'Bronx'},{},5)
6. db.addresses.find({borough:'Bronx'})
7. db.addresses.find({borough:'Bronx'},{},5,5)
8. db.addresses.find({'grades.score':{$gt:90}})
9. db.addresses.find({'grades.score':{$gt:80,$lt:100}})
10. db.addresses.find({'address.coord.0':{$gt:-95.754168}})
11. db.addresses.find({cuisine:{$ne:'American'},'grades.score':{$gt:70},'address.coord.0':{$lt:-65.754168}})
12. db.addresses.find({cuisine:{$ne:'American'},'grades.score':{$gt:70},'address.coord.1':{$lt:-65.754168}})
13. db.addresses.find({cuisine:{$ne:'American'},'grades.grade':"A",borough:{$ne:Brooklyn}}).sort(cuisine:-1)
14. db.addresses.find({name:/^Wil/i},{restaurant_id:1,name:1,borough:1,cuisine:1})
15. db.addresses.find({name:/ces$/i},{restaurant_id:1,name:1,borough:1,cuisine:1})
16. db.addresses.find({name:/reg/i},{restaurant_id:1,name:1,borough:1,cuisine:1})
17. db.addresses.find({borough:'Bronx',$or:[{cuisine:'American'},{cuisine:'Chinese'}]})
18. db.addresses.find({$or:[{borough:'Staten Island'},{borough:'Queens'},{borough:'Bronx'},{borough:'Brooklyn'}]},{restaurant_id:1,name:1,borough:1,cuisine:1})
19. db.addresses.find({$and:[{borough:{$ne:'Staten Island'}},{borough:{$ne:'Queens'}},{borough:{$ne:'Bronx'}},{borough:{$ne:'Brooklyn'}}]},{restaurant_id:1,name:1,borough:1,cuisine:1})
20. db.addresses.find({'grades.score':{$lte:10}},{restaurant_id:1,name:1,borough:1,cuisine:1})
21. db.addresses.find({$or:[{$and:[{cuisine:{$ne:"American "}},{cuisine:{$ne:"Chinese"}}]},{name:/^Wil/i}]},{restaurant_id:1,name:1,borough:1,cuisine:1})
22. db.addresses.find({$and:[{'grades.date':ISODate("2014-08-11T00:00:00Z")},{'grades.grade':"A"},{'grades.score':11}]},{restaurant_id:1,name:1,grades:1})
23. db.addresses.find({'grades.1.date': ISODate("2014-08-11T00:00:00Z"), 'grades.1.score':9,'grades.1.grade':'A'},{"restaurant_id" : 1,"name":1,"grades":1})
24. db.addresses.find({'address.coord.1':{$gt:42,$lt:52}},{restaurant_id:1,name:1,address:1,coord:1})
25. db.addresses.find({}).sort({'name':1})
26. db.addresses.find({}).sort({'name':-1})
27. db.addresses.find({}).sort({'borough':1,'cuisine':1})
28. db.addresses.find({'address.street':{$exists:true}})
29. db.addresses.find({'address.coord':{$type:'double'}})
30. db.addresses.find( { 'grades.score': { $mod: [ 7, 0 ] } },{"restaurant_id" : 1,"name":1,"grades":1} )
31. db.addresses.find({name: /mon/},{"name" : 1,"coord":1,"borough":1,"cuisine" :1})
32. db.addresses.find({name:/^Mad/},{"name":1,"borough":1,"cuisine" :1,'address.coord':1})